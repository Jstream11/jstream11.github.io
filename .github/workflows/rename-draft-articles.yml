name: Rename Draft Articles

on:
  # schedule:
    # every 4 hours on the half hour
    # - cron: '30 */4 * * *'
    # every hour at 5 minutes past the hour
    # - cron: '05 * * * *'
  # on demand
  workflow_dispatch:
    inputs:
      drafts_path:
        description: 'Drafts folder. This folder will be scanned for possible draft articles.'
        required: true
        default: '_drafts'
        type: string
      posts_path:
        description: 'Posts folder. The renamed article will be stored here.'
        required: true
        default: '_posts'
        type: string
      config_path:
        description: 'Jekyll config.yml path. This is used to set the TimeZone if file exists and contains a yaml key timezone.'
        required: true
        default: '_config.yml'
        type: string
      allow_multiple_posts:
        description: 'Allow multiple posts per day. If true, draft articles will be published chronologically, otherwise the last edited file will be published.'
        type: boolean
      preserve_date_filename:
        description: 'Preserve an existing filename with date format. If true, the filename will be prepended with YYYY-MM-dd, otherwise the old date will be replaced before YYYY-MM-dd is prepended to the filename.'
        type: boolean

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: PowerShell Module Cache
      uses: potatoqualitee/psmodulecache@v4.5
      with:
        modules-to-cache: powershell-yaml

    - name: Rename Draft Articles
      id: rename_drafts
      run: |
        Set-Location -Path $env:GITHUB_WORKSPACE
        $Parameters = @{
          DraftsPath = ${{ inputs.drafts_path }}
          PostsPath =  ${{ inputs.posts_path }}
          ConfigPath =  ${{ inputs.config_path }}
        }
        if ([System.Convert]::ToBoolean('${{ inputs.allow_multiple_posts }}')) {
          $Parameters.Add('AllowMultiplePostsPerDay',$true)
        }
        if ([System.Convert]::ToBoolean('${{ inputs.preserve_date_filename }}')) {
          $Parameters.Add('PreserveDateFileName',$true)
        }
        $Parameters
        #./script/Rename-DraftArticle.ps1 @Parameters

    - name: Check Output
      run: |
        if ([System.Convert]::ToBoolean('${{ steps.rename_drafts.outputs.publish }}')) {
          'publish renamed drafts'
        } else {
          'no action required'
        }

