name: Rename Draft Articles

on:
  # schedule:
    # every 4 hours on the half hour
    # - cron: '30 */4 * * *'
    # every hour at 5 minutes past the hour
    # - cron: '05 * * * *'
  # on demand
  workflow_dispatch:
    inputs:
      drafts_path:
        description: 'Drafts folder. This folder will be scanned for possible draft articles.'
        required: true
        default: '_drafts'
        type: string
      posts_path:
        description: 'Posts folder. The renamed article will be stored here.'
        required: true
        default: '_posts'
        type: string
      config_path:
        description: 'Jekyll config.yml path. This is used to set the TimeZone if file exists and contains a yaml key timezone.'
        required: true
        default: '_config.yml'
        type: string
      allow_multiple_posts:
        description: 'Allow multiple posts per day. If true, draft articles will be published chronologically, otherwise the last edited file will be published.'
        type: boolean
      preserve_date_filename:
        description: 'Preserve an existing filename with date format. If true, the filename will be prepended with YYYY-MM-dd, otherwise the old date will be replaced before YYYY-MM-dd is prepended to the filename.'
        type: boolean

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: PowerShell Module Cache
      uses: potatoqualitee/psmodulecache@v5.2
      with:
        modules-to-cache: powershell-yaml

    - name: Rename Draft Articles
      id: rename_drafts
      run: |
        '::group::Parameters for Script'
        Set-Location -Path $env:GITHUB_WORKSPACE
        $Parameters = @{
          DraftsPath = '${{ inputs.drafts_path }}'
          PostsPath =  '${{ inputs.posts_path }}'
          ConfigPath =  '${{ inputs.config_path }}'
        }
        if ([System.Convert]::ToBoolean('${{ inputs.allow_multiple_posts }}')) {
          $Parameters.AllowMultiplePostsPerDay = $true
        }
        if ([System.Convert]::ToBoolean('${{ inputs.preserve_date_filename }}')) {
          $Parameters.PreserveDateFileName = $true
        }
        $Parameters
        ''
        '::endgroup::'
        .github/scripts/RenameDraftArticles.ps1 @Parameters

    - name: Check for New Articles to Publish
      run: |
        if ([System.Convert]::ToBoolean($env:DRAFTS_ARTICLES_RENAMED)) {
          'Found and renamed at least one draft article requiring the site to be published.'
          'PUBLISH_ARTICLES=true' >> $env:GITHUB_ENV
        } else {
          'No articles matched the criteria to be renamed and published.'
          'PUBLISH_ARTICLES=false' >> $env:GITHUB_ENV
        }

    - name: Import GPG
      uses: crazy-max/ghaction-import-gpg@v5.2.0
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4.2.4
      with:
        commit-message: publish draft article
        committer: ${{ vars.GIT_USER_NAME }} <${{ vars.GIT_USER_EMAIL }}>
        branch: draft-articles
        title: Create Pull Request
        body: Create pull request to publish renamed article
        delete-branch: true

    - name: Find Pull Request
      uses: juliangruber/find-pull-request-action@v1.8.0
      id: find-pull-request
      with:
        branch: draft-articles

    - name: Merge Pull Request
      id: merge-pull-request
      uses: juliangruber/merge-pull-request-action@v1.1.0
      with:
        number: ${{ steps.find-pull-request.outputs.number }}
        method: merge

